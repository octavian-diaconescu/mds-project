name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: timescale/timescaledb:latest-pg14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: iot_security
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install dependencies
      run: cargo build
      working-directory: ./iot-security-backend

    - name: Wait for database to be ready
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U postgres; then
            echo "Database is ready!"
            break
          fi
          echo "Waiting for database..."
          sleep 5
        done

    - name: Initialize database
      run: |
        psql -h localhost -U postgres -d iot_security -f ./db/SqlScript.sql
      env:
        PGPASSWORD: password

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:password@localhost:5432/iot_security
      run: cargo test
      working-directory: ./iot-security-backend